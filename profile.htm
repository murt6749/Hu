<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Profile - HU Jama'aa Qira'at</title>
    <link href="https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #0c4b33;
            --secondary: #1da584;
            --accent: #f7c35f;
            --light: #f8f9fa;
            --dark: #212529;
            --success: #28a745;
            --info: #17a2b8;
            --warning: #ffc107;
            --danger: #dc3545;
            --gold: #ffd700;
            --green: #2ecc71;
            --text-light: #f8f9fa;
            --text-dark: #343a40;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Tajawal', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #e4e8eb 100%);
            color: var(--text-dark);
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            padding: 25px 0;
            text-align: center;
            border-radius: 0 0 20px 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            margin-bottom: 40px;
            position: relative;
            overflow: hidden;
            z-index: 10;
        }
        
        header::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><text x="10" y="50" font-family="Arial" font-size="20" fill="rgba(255,255,255,0.05)">ï·²</text></svg>');
            opacity: 0.1;
            z-index: -1;
        }
        
        header h1 {
            font-size: 2.8rem;
            margin-bottom: 10px;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        header p {
            font-size: 1.3rem;
            opacity: 0.9;
        }
        
        .back-btn {
            position: absolute;
            top: 25px;
            left: 25px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            border-radius: 50px;
            padding: 10px 20px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            backdrop-filter: blur(5px);
        }
        
        .back-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: translateX(-5px);
        }
        
        .profile-container {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }
        
        .profile-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            text-align: center;
            position: sticky;
            top: 20px;
            align-self: start;
        }
        
        .profile-pic {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid var(--light);
            margin: 0 auto 20px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 4rem;
            font-weight: 700;
        }
        
        .profile-name {
            font-size: 1.8rem;
            margin-bottom: 5px;
            color: var(--dark);
        }
        
        .profile-id {
            color: var(--secondary);
            font-weight: 600;
            margin-bottom: 20px;
        }
        
        .profile-details {
            text-align: left;
            margin-top: 20px;
        }
        
        .detail-item {
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .detail-item i {
            color: var(--secondary);
            font-size: 1.2rem;
            width: 25px;
            text-align: center;
        }
        
        .progress-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        
        .section-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .section-title i {
            color: var(--secondary);
        }
        
        .course-progress {
            margin-bottom: 30px;
        }
        
        .progress-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }
        
        .progress-bar {
            height: 10px;
            background: #e9ecef;
            border-radius: 5px;
            margin-bottom: 5px;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            border-radius: 5px;
            transition: width 0.5s ease;
        }
        
        .progress-text {
            display: flex;
            justify-content: space-between;
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .attendance-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-top: 30px;
        }
        
        .stat-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 5px;
        }
        
        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .classmates-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .classmates-count {
            font-size: 1.2rem;
            margin-bottom: 20px;
            color: var(--dark);
        }
        
        .classmates-count span {
            color: var(--secondary);
            font-weight: 700;
        }
        
        .classmates-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }
        
        .classmate-card {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            transition: all 0.3s ease;
        }
        
        .classmate-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .classmate-pic {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            object-fit: cover;
            margin: 0 auto 10px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            font-weight: 700;
        }
        
        .classmate-name {
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--dark);
        }
        
        .classmate-dept {
            font-size: 0.8rem;
            color: #6c757d;
        }
        
        .view-all {
            display: inline-block;
            margin-top: 20px;
            color: var(--secondary);
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .view-all:hover {
            color: var(--primary);
            transform: translateX(5px);
        }
        
        .btn {
            display: inline-block;
            padding: 12px 25px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
            text-decoration: none;
            text-align: center;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }
        
        .btn i {
            margin-right: 8px;
        }
        
        footer {
            text-align: center;
            padding: 30px;
            margin-top: 60px;
            color: #6c757d;
            font-size: 0.9rem;
            background: white;
            border-radius: 20px 20px 0 0;
            box-shadow: 0 -5px 30px rgba(0, 0, 0, 0.05);
        }
        
        /* Responsive Design */
        @media (max-width: 992px) {
            .profile-container {
                grid-template-columns: 1fr;
            }
            
            .profile-card {
                position: static;
            }
            
            .attendance-stats {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 768px) {
            header h1 {
                font-size: 2.2rem;
            }
            
            header p {
                font-size: 1.1rem;
            }
            
            .profile-name {
                font-size: 1.5rem;
            }
            
            .section-title {
                font-size: 1.3rem;
            }
            
            .classmates-grid {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }
        }
        
        @media (max-width: 576px) {
            header h1 {
                font-size: 1.8rem;
            }
            
            .back-btn {
                position: static;
                margin-bottom: 15px;
            }
            
            .profile-pic {
                width: 120px;
                height: 120px;
                font-size: 3rem;
            }
            
            .classmates-grid {
                grid-template-columns: 1fr 1fr;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <button class="back-btn" onclick="window.location.href='index.html'">
                <i class="fas fa-arrow-left"></i> Back to Courses
            </button>
            <h1><i class="fas fa-user-circle"></i> My Profile</h1>
            <p>View your progress and course information</p>
        </div>
    </header>
    
    <div class="container">
        <div class="profile-container">
            <div class="profile-card">
                <div class="profile-pic" id="profileInitials">AB</div>
                <h2 class="profile-name" id="profileName">Abebe Kebede</h2>
                <div class="profile-id" id="profileId">ID: 2117/13</div>
                
                <div class="profile-details">
                    <div class="detail-item">
                        <i class="fas fa-book"></i>
                        <span id="profileCourse">Sifetu Solah</span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-language"></i>
                        <span id="profileLanguage">Amharic</span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-building"></i>
                        <span id="profileDepartment">Computer Science</span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-calendar-alt"></i>
                        <span id="profileYear">3rd Year</span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-phone"></i>
                        <span id="profilePhone">0912345678</span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-calendar-day"></i>
                        <span id="profileDays">Saturday and Sunday</span>
                    </div>
                </div>
                
                <a href="index.html" class="btn">
                    <i class="fas fa-book-open"></i> Browse Courses
                </a>
            </div>
            
            <div class="profile-content">
                <div class="progress-section">
                    <h3 class="section-title">
                        <i class="fas fa-chart-line"></i> My Progress
                    </h3>
                    
                    <div class="course-progress">
                        <div class="progress-header">
                            <span>Course Completion</span>
                            <span id="completionPercent">25%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" id="completionBar" style="width: 25%"></div>
                        </div>
                        <div class="progress-text">
                            <span>Started: <span id="startDate">Oct 15, 2023</span></span>
                            <span>Estimated Completion: <span id="endDate">Dec 30, 2023</span></span>
                        </div>
                    </div>
                    
                    <div class="course-progress">
                        <div class="progress-header">
                            <span>Attendance Rate</span>
                            <span id="attendancePercent">85%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" id="attendanceBar" style="width: 85%; background: linear-gradient(90deg, var(--success), #5cb85c)"></div>
                        </div>
                        <div class="progress-text">
                            <span>Present: <span id="presentDays">17</span> days</span>
                            <span>Absent: <span id="absentDays">3</span> days</span>
                        </div>
                    </div>
                    
                    <div class="attendance-stats">
                        <div class="stat-card">
                            <div class="stat-value" id="lastAttendance">5</div>
                            <div class="stat-label">Days since last class</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value" id="nextClass">2</div>
                            <div class="stat-label">Days to next class</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value" id="streak">8</div>
                            <div class="stat-label">Weeks streak</div>
                        </div>
                    </div>
                </div>
                
                <div class="classmates-section">
                    <h3 class="section-title">
                        <i class="fas fa-users"></i> My Classmates
                    </h3>
                    <p class="classmates-count">There are <span id="classmatesCount">24</span> students enrolled in your course</p>
                    
                    <div class="classmates-grid" id="classmatesGrid">
                        <!-- Classmates will be added here dynamically -->
                    </div>
                    
                    <a href="#" class="view-all">
                        View all classmates <i class="fas fa-arrow-right"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <footer>
        <div class="container">
            <p><i class="far fa-copyright"></i> 2023 Haramaya University Jama'aa. All rights reserved.</p>
        </div>
    </footer>

    <!-- Firebase SDK -->
    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
        import { getFirestore, collection, query, where, getDocs } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-firestore.js";

        // Your web app's Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyBQyNVWh1BtCkXlBfuS7jHAa36FTklZayo",
            authDomain: "pharma-quiz-b5a07.firebaseapp.com",
            projectId: "pharma-quiz-b5a07",
            storageBucket: "pharma-quiz-b5a07.appspot.com",
            messagingSenderId: "161067776789",
            appId: "1:161067776789:web:88b8a61145dc5f5c31471c",
            measurementId: "G-3QRQE9HQFB"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);

        // Get URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const courseParam = urlParams.get('course');
        const studentIdParam = urlParams.get('studentId');

        // DOM Elements
        const profileInitials = document.getElementById('profileInitials');
        const profileName = document.getElementById('profileName');
        const profileId = document.getElementById('profileId');
        const profileCourse = document.getElementById('profileCourse');
        const profileLanguage = document.getElementById('profileLanguage');
        const profileDepartment = document.getElementById('profileDepartment');
        const profileYear = document.getElementById('profileYear');
        const profilePhone = document.getElementById('profilePhone');
        const profileDays = document.getElementById('profileDays');
        const completionPercent = document.getElementById('completionPercent');
        const completionBar = document.getElementById('completionBar');
        const attendancePercent = document.getElementById('attendancePercent');
        const attendanceBar = document.getElementById('attendanceBar');
        const startDate = document.getElementById('startDate');
        const endDate = document.getElementById('endDate');
        const presentDays = document.getElementById('presentDays');
        const absentDays = document.getElementById('absentDays');
        const lastAttendance = document.getElementById('lastAttendance');
        const nextClass = document.getElementById('nextClass');
        const streak = document.getElementById('streak');
        const classmatesCount = document.getElementById('classmatesCount');
        const classmatesGrid = document.getElementById('classmatesGrid');

        // Load student data
        async function loadStudentData() {
            if (!studentIdParam || !courseParam) {
                alert('Invalid profile access. Redirecting to home page.');
                window.location.href = 'index.html';
                return;
            }

            try {
                // Get student data
                const q = query(collection(db, "registrations"), 
                    where("studentId", "==", studentIdParam),
                    where("course", "==", courseParam));
                
                const querySnapshot = await getDocs(q);
                
                if (querySnapshot.empty) {
                    alert('Student record not found. Redirecting to home page.');
                    window.location.href = 'index.html';
                    return;
                }
                
                const studentData = querySnapshot.docs[0].data();
                
                // Update profile information
                const nameParts = studentData.fullName.split(' ');
                const initials = nameParts[0].charAt(0) + (nameParts.length > 1 ? nameParts[1].charAt(0) : nameParts[0].charAt(1));
                profileInitials.textContent = initials;
                profileName.textContent = studentData.fullName;
                profileId.textContent = `ID: ${studentData.studentId}`;
                profileCourse.textContent = studentData.course;
                profileLanguage.textContent = studentData.language;
                profileDepartment.textContent = studentData.department;
                profileYear.textContent = studentData.yearOfStudy === '6+' ? '6+ Year' : `${studentData.yearOfStudy} Year`;
                profilePhone.textContent = studentData.phoneNumber;
                profileDays.textContent = studentData.days || 'Not specified';
                
                // Set random progress data (in a real app, this would come from the database)
                const completion = Math.floor(Math.random() * 30) + 10;
                completionPercent.textContent = `${completion}%`;
                completionBar.style.width = `${completion}%`;
                
                const attendance = Math.floor(Math.random() * 30) + 70;
                attendancePercent.textContent = `${attendance}%`;
                attendanceBar.style.width = `${attendance}%`;
                
                const today = new Date();
                startDate.textContent = new Date(today.getTime() - Math.floor(Math.random() * 30) * 24 * 60 * 60 * 1000).toLocaleDateString();
                endDate.textContent = new Date(today.getTime() + Math.floor(Math.random() * 60) * 24 * 60 * 60 * 1000).toLocaleDateString();
                
                presentDays.textContent = Math.floor(attendance / 100 * 20);
                absentDays.textContent = 20 - parseInt(presentDays.textContent);
                
                lastAttendance.textContent = Math.floor(Math.random() * 7) + 1;
                nextClass.textContent = (7 - parseInt(lastAttendance.textContent)) || 1;
                streak.textContent = Math.floor(Math.random() * 10) + 1;
                
                // Load classmates
                await loadClassmates(studentData.course, studentData.studentId);
                
            } catch (error) {
                console.error("Error loading student data: ", error);
                alert('An error occurred while loading your profile.');
            }
        }

        // Load classmates data
        async function loadClassmates(course, excludeStudentId) {
            try {
                const q = query(collection(db, "registrations"), 
                    where("course", "==", course));
                
                const querySnapshot = await getDocs(q);
                const classmates = [];
                
                querySnapshot.forEach((doc) => {
                    const student = doc.data();
                    if (student.studentId !== excludeStudentId) {
                        classmates.push(student);
                    }
                });
                
                // Update classmates count
                classmatesCount.textContent = classmates.length;
                
                // Display first 6 classmates
                const displayCount = Math.min(classmates.length, 6);
                classmatesGrid.innerHTML = '';
                
                for (let i = 0; i < displayCount; i++) {
                    const classmate = classmates[i];
                    const nameParts = classmate.fullName.split(' ');
                    const initials = nameParts[0].charAt(0) + (nameParts.length > 1 ? nameParts[1].charAt(0) : nameParts[0].charAt(1));
                    
                    classmatesGrid.innerHTML += `
                        <div class="classmate-card">
                            <div class="classmate-pic">${initials}</div>
                            <div class="classmate-name">${classmate.fullName}</div>
                            <div class="classmate-dept">${classmate.department}</div>
                        </div>
                    `;
                }
                
            } catch (error) {
                console.error("Error loading classmates: ", error);
            }
        }

        // Initialize the page
        loadStudentData();
    </script>
</body>
</html>
